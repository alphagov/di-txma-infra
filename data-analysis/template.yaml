AWSTemplateFormatVersion: '2010-09-09'
Description: Static infrastructure for TICF Zendesk integration
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Description: The environment type
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production

Resources:
  BatchJobManifestBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-${Environment}-batch-job-manifest-bucket
      LifecycleConfiguration:
        Rules:
          - Id: BatchJobManifestCleanupRule
            Status: Enabled
            ExpirationInDays: 5
      LoggingConfiguration:
        DestinationBucketName: !Ref BatchJobBucketLogsBucket
        LogFilePrefix: String
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  BatchJobBucketLogsBucket:
    #checkov:skip=CKV_AWS_18:This is the logs bucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-batch-job-bucket-logs
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  ValidEmailRecipientsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-${Environment}-email-recipients
      LoggingConfiguration:
        DestinationBucketName: !Ref ValidEmailRecipientsLogsBucket
        LogFilePrefix: String
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  ValidEmailRecipientsLogsBucket:
    #checkov:skip=CKV_AWS_18:This is the logs bucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-email-recipients-logs
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  AuditAnalysisDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Description: TxMA - Event Message Analysis Database
        Name:
          !Join [
            '',
            [
              !Join ['', !Split ['-', !Ref AWS::StackName]],
              !Sub '_${Environment}_analysis_database'
            ]
          ]

  AthenaAnalysisWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Description: The workgroup for TxMA queries
      Name: !Sub ${AWS::StackName}-${Environment}-analysis-queries-workgroup
      RecursiveDeleteOption: true
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: false
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: SSE_S3
          OutputLocation:
            !Join ['', ['s3://', !ImportValue QueryResultsBucketName, '/']]

  QueryRequestTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: zendeskId
          AttributeType: S
        - AttributeName: athenaQueryId
          AttributeType: S
      KeySchema:
        - AttributeName: zendeskId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: athenaQueryIdIndex
          KeySchema:
            - AttributeName: athenaQueryId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: '{{resolve:ssm:DatabaseKmsKeyArn}}'

  ZendeskWebhookApiWafAcl:
    Type: AWS::WAFv2::WebACL
    Properties:
      DefaultAction:
        Allow: {}
      Scope: REGIONAL
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        MetricName: ZendeskWebhookApiWafMetric
        SampledRequestsEnabled: true
      Rules:
        - Name: AwsManagedRulesCommonRuleSet
          Priority: 0
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
              ExcludedRules: []
          OverrideAction:
            Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: ZendeskWebhookApiWafCommonRuleSetMetric
        - Name: AWSManagedRulesKnownBadInputsRuleSet
          Priority: 1
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          OverrideAction:
            None: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: ZendeskWebhookApiWafKnownBadInputsRuleSetMetric
            SampledRequestsEnabled: true
        - Name: AWSManagedRulesAmazonIpReputationList
          Priority: 2
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
          OverrideAction:
            None: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: ZendeskWebhookApiWafIpReputationListMetric
            SampledRequestsEnabled: true

  AuditDataRequestEventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-${Environment}-audit-data-request-events-queue
      KmsMasterKeyId: '{{resolve:ssm:SqsKmsKeyArn}}'
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AuditDataRequestEventsDeadLetterQueue.Arn
        maxReceiveCount: 5

  AuditDataRequestEventsDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-${Environment}-audit-data-request-events-dead-letter-queue
      KmsMasterKeyId: '{{resolve:ssm:SqsKmsKeyArn}}'

  BatchJobManifestBucketArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: BatchJobManifestBucketArn
      Type: String
      Value: !GetAtt BatchJobManifestBucket.Arn

  BatchJobManifestBucketNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: BatchJobManifestBucketName
      Type: String
      Value: !Ref BatchJobManifestBucket

  ValidEmailRecipientsBucketNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: ValidEmailRecipientsBucketName
      Type: String
      Value: !Ref ValidEmailRecipientsBucket

  ValidEmailRecipientsBucketArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: ValidEmailRecipientsBucketArn
      Type: String
      Value: !GetAtt ValidEmailRecipientsBucket.Arn

  AuditAnalysisDatabaseArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditAnalysisDatabaseArn
      Type: String
      Value: !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/${AuditAnalysisDatabase}

  AuditAnalysisDatabaseNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditAnalysisDatabaseName
      Type: String
      Value: !Ref AuditAnalysisDatabase

  AthenaAnalysisWorkgroupArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AthenaAnalysisWorkgroupArn
      Type: String
      Value: !Sub arn:${AWS::Partition}:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${AthenaAnalysisWorkgroup}

  AthenaAnalysisWorkgroupNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AthenaAnalysisWorkgroupName
      Type: String
      Value: !Ref AthenaAnalysisWorkgroup

  QueryRequestTableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: QueryRequestTableArn
      Type: String
      Value: !GetAtt QueryRequestTable.Arn

  QueryRequestTableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: QueryRequestTableName
      Type: String
      Value: !Ref QueryRequestTable

  ZendeskWebhookApiWafAclArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: ZendeskWebhookApiWafAclArn
      Type: String
      Value: !GetAtt ZendeskWebhookApiWafAcl.Arn

  AuditDataRequestEventsQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditDataRequestEventsQueueArn
      Type: String
      Value: !GetAtt AuditDataRequestEventsQueue.Arn

  AuditDataRequestEventsQueueUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditDataRequestEventsQueueUrl
      Type: String
      Value: !Ref AuditDataRequestEventsQueue
