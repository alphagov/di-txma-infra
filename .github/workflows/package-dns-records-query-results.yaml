name: Package DNS records for Query Results account

on:
  push:
    paths:
      - dns-records-query-results/**
  workflow_dispatch: {}

env:
  AWS_REGION: eu-west-2

jobs:
  validate:
    name: Validate template
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: dns-records-query-results
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: pip
      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
      - name: Assume AWS Validate role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.GH_ACTIONS_VALIDATE_ROLE_ARN_DNS_RECORDS_QUERY_RESULTS }}
      - name: Validate SAM template
        if: always()
        run: sam validate
      - name: Run Checkov on SAM template
        if: always()
        uses: bridgecrewio/checkov-action@master
        with:
          file: template.yaml
          quiet: true
          framework: cloudformation
      - name: Upload template artifact
        uses: actions/upload-artifact@v3
        with:
          name: dns-records-query-results-sam-template
          path: |
            dns-records-query-results/template.yaml

  deploy-dry-run:
    strategy:
      matrix:
        target: [QUERY_RESULTS_BUILD]
        include:
          - target: QUERY_RESULTS_BUILD
            ARTIFACT_BUCKET_NAME_SECRET: ARTIFACT_BUCKET_NAME_DNS_RECORDS_QUERY_RESULTS
            GH_ACTIONS_ROLE_ARN_SECRET: GH_ACTIONS_ROLE_ARN_DNS_RECORDS_QUERY_RESULTS
    name: Create changeset
    if: github.ref != 'refs/heads/main'
    needs: [validate]
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: dns-records-query-results-sam-template
      - name: Setup Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: pip
      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets[matrix.GH_ACTIONS_ROLE_ARN_SECRET] }}
      - name: Create changeset
        env:
          BRANCH_NAME: ${{ github.event.ref }}
          S3_BUCKET: ${{ secrets[matrix.ARTIFACT_BUCKET_NAME_SECRET] }}
        run: |
          stack_name=$(
            echo ${BRANCH_NAME##*/} | \
            tr -cd '[a-zA-Z0-9-]' | \
            tr '[:upper:]' '[:lower:]' | \
            cut -c -32
          )

          sam deploy \
            --stack-name ${stack_name} \
            --no-execute-changeset \
            --no-fail-on-empty-changeset \
            --s3-bucket ${S3_BUCKET}

  package:
    strategy:
      matrix:
        target: [QUERY_RESULTS_BUILD]
        include:
          - target: QUERY_RESULTS_BUILD
            ARTIFACT_BUCKET_NAME_SECRET: ARTIFACT_BUCKET_NAME_DNS_RECORDS_QUERY_RESULTS
            GH_ACTIONS_ROLE_ARN_SECRET: GH_ACTIONS_ROLE_ARN_DNS_RECORDS_QUERY_RESULTS
            SIGNING_PROFILE_SECRET: SIGNING_PROFILE_NAME_QUERY_RESULTS_BUILD
    name: Package template
    if: github.ref == 'refs/heads/main'
    needs: [validate]
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: dns-records-query-results-sam-template
      - name: Setup Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: pip
      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets[matrix.GH_ACTIONS_ROLE_ARN_SECRET] }}
      - name: Package SAM app
        uses: alphagov/di-devplatform-upload-action@v2
        with:
          artifact-bucket-name: ${{ secrets[matrix.ARTIFACT_BUCKET_NAME_SECRET] }}
          signing-profile-name: ${{ secrets[matrix.SIGNING_PROFILE_SECRET] }}
          working-directory: '.'
